@using Microsoft.AspNet.Identity;
@model List<CampaignViewModel>
@{
    Layout = "_Layout";
    ViewBag.Title = "Newsfeed";
}

<div class="container mt-4">
    <!-- Start of Newsfeed Item Loop -->
    @foreach (var campaign in Model)
    {
        var isLiked = ViewBag.UserLikeStatus.ContainsKey(campaign.CampaignId) && ViewBag.UserLikeStatus[campaign.CampaignId];

        <div class="card mb-3 custom-bg">

            <div class="row">
                <!-- Text-related fields column -->
                <div class="col-md-6">
                    <div class="card-body">
                        <div class="custom-text">
                            Posted by @(ViewBag.TeacherNames.ContainsKey(campaign.TeacherId) ? ViewBag.TeacherNames[campaign.TeacherId] : "Unknown") on @campaign.CreatedDate.ToString("MMMM dd, yyyy")
                        </div>
                        <div class="d-flex justify-content-start align-items-center m-2">
                            <h2 class="card-title me-3 custom-title">@campaign.Title</h2>
                            <span class="card-text badge bg-info custom-text">@campaign.CampaignType</span>
                        </div>
                        <h4 class="card-text custom-title">@campaign.Description</h4>
                        <p class="card-text custom-title">@campaign.Content</p>
                        <div>
                            <!-- Like button form -->
                            @using (Html.BeginForm("Like", "Interactions", FormMethod.Post, new { @class = "like-form d-inline" }))
                            {
                                @Html.AntiForgeryToken()
                                <input type="hidden" name="campaignId" value="@campaign.CampaignId" />
                                <button type="submit" class="btn btn-success btn-like @(isLiked ? "liked" : "") mr-2">
                                    @(isLiked ? "Unlike" : "Like")
                                </button>
                            }
                        </div>

                        <h6 class="custom-title mt-3" id="commentsCountContainer-@campaign.CampaignId"></h6>
                        <a class="text-decoration-underline" href="@Url.Action("Detail", "Campaigns", new { id = campaign.CampaignId })">Leave a comment?</a>
                    </div>
                </div>
                <div class="col-md-6 d-flex justify-content-end align-items-center">
                    <img src="@campaign.ImageUrl" class="img-fluid border-opacity-50 me-3" alt="Campaign Image">
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        $(document).ready(function () {
        @foreach (var campaign in Model)
        {
            <text>
                    updateCommentsCount(@campaign.CampaignId);
            </text>
        }
                });

        function updateCommentsCount(campaignId) {
            $.ajax({
                url: '@Url.Action("GetCommentsCount", "Newsfeed")',
                type: 'GET',
                data: { campaignId: campaignId },
                success: function (response) {
                    $('#commentsCountContainer-' + campaignId).text(response.count + " Comments");
                }
            });
        }


        // Pass the URL from the Razor view to the external JS
        // var commentUrl = '@Url.Action("Comment", "Interactions")';
        // var getCommentsUrl = '@Url.Action("GetComments", "Newsfeed")';
        // // Initialize a global object to store these URLs
        // window.siteUrls = {
        //     commentUrl: commentUrl,
        //     getCommentsUrl: getCommentsUrl
        // };

    </script>
}
